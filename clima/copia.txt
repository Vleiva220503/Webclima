import React, { useState } from 'react';

function WeatherApp() {
  const [result, setResult] = useState('');
  const [city, setCity] = useState('');
  const [country, setCountry] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (city === '' || country === '') {
      showError('Ambos campos son obligatorios...');
      return;
    }

    await callAPI(city, country);
  };

  const callAPI = async (city, country) => {
    const apiId = '41d1d7f5c2475b3a16167b30bc4f265c';
    const url = `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${apiId}`;

    try {
      const response = await fetch(url);
      const dataJSON = await response.json();

      if (dataJSON.cod === '404') {
        showError('Ciudad no encontrada...');
      } else {
        clearHTML();
        showWeather(dataJSON);
      }
    } catch (error) {
      console.log(error);
    }
  };

  const showWeather = (data) => {
    const { name, main: { temp, temp_min, temp_max }, weather: [arr] } = data;

    const degrees = kelvinToCentigrade(temp);
    const min = kelvinToCentigrade(temp_min);
    const max = kelvinToCentigrade(temp_max);

    const content = (
      <div>
        <h5>Clima en {name}</h5>
        <img src={`https://openweathermap.org/img/wn/${arr.icon}@2x.png`} alt="icon" />
        <h2>{degrees}°C</h2>
        <p>Max: {max}°C</p>
        <p>Min: {min}°C</p>
      </div>
    );

    setResult(content);
  };

  const showError = (message) => {
    const alert = (
      <p className="alert-message">{message}</p>
    );

    setResult(alert);
    setTimeout(() => {
      setResult('');
    }, 3000);
  };

  const kelvinToCentigrade = (temp) => {
    return parseInt(temp - 273.15);
  };

  const clearHTML = () => {
    setResult('');
  };

  return (
    <div>
      {result && <div className="result">{result}</div>}
      <form className="get-weather" onSubmit={handleSubmit}>
        <input id="city" type="text" value={city} onChange={(e) => setCity(e.target.value)} placeholder="City" />
        <input id="country" type="text" value={country} onChange={(e) => setCountry(e.target.value)} placeholder="Country" />
        <button type="submit">Get Weather</button>
      </form>
    </div>
  );
}

export default WeatherApp;

